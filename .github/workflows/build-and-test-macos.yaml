name: Build and test on macOS
on:
  push:
    branches:
      - main
    paths-ignore:
      - web/**
      - doc/**
  pull_request:
    branches:
      - main
    paths-ignore:
      - web/**
      - doc/**

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

env:
  SCCACHE_VERSION: '0.9.1'

jobs:
  build:
    env:
      HOMEBREW_NO_INSTALL_UPGRADE: 1
      HOMEBREW_NO_INSTALLED_DEPENDENTS_CHECK: 1
    strategy:
      fail-fast: false
      matrix:
        os:
          - macos-13
          - macos-14
    runs-on: ${{ matrix.os }}
    steps:
      - name: Install dependencies
        run: |
          # Ignore errors from brew install
          # This helps with flaky Homebrew installations on GitHub Actions
          brew update || echo "Warning: brew update failed, continuing"
          
          brew install --force \
            cmake              \
            curl               \
            freetype           \
            gettext            \
            gperf              \
            imlib2             \
            lcov               \
            librsvg            \
            libxfixes          \
            libxft             \
            libxi              \
            libxinerama        \
            libxml2            \
            lua                \
            ninja              \
            pkg-config         \
            || echo "Warning: Some packages may have failed to install, continuing anyway"
            
          # Verify critical dependencies
          for cmd in cmake ninja; do
            if ! command -v $cmd &>/dev/null; then
              echo "Error: Required command $cmd not available"
              exit 1
            fi
          done
      - name: Checkout
        uses: actions/checkout@v5
      - name: Configure sccache
        run: |
          # Make script executable
          chmod +x .github/scripts/setup-sccache.sh || echo "Warning: Failed to make setup-sccache.sh executable"
          
          # Run the script
          .github/scripts/setup-sccache.sh || echo "Warning: sccache setup failed, continuing without it"
      - name: Load cached compilation artifacts
        id: compiler-cache
        uses: actions/cache@v4
        with:
          path: '${{ env.SCCACHE_DIR }}'
          key: sccache-${{ matrix.os }}
          restore-keys: |
            sccache-${{ matrix.os }}
            sccache-
      - name: Configure with CMake
        run: |
          # Reset sccache statistics if available
          if command -v sccache >/dev/null 2>&1; then
            sccache --zero-stats || echo "Warning: Failed to reset sccache stats, continuing anyway"
          fi

          # Configure with CMake
          cmake . -B build -G Ninja            \
          -DMAINTAINER_MODE=ON                 \
          -DBUILD_WAYLAND=OFF                  \
          -DBUILD_RSS=ON                       \
          -DBUILD_CURL=ON
          
          if [ $? -ne 0 ]; then
            echo "Error: CMake configuration failed"
            cat build/CMakeFiles/CMakeError.log || echo "Could not find CMakeError.log"
            exit 1
          fi
      - name: Compile
        run: |
          cmake --build build
          if [ $? -ne 0 ]; then
            echo "Error: Build failed"
            exit 1
          fi
      - name: Show sccache stats
        run: |
          if command -v sccache >/dev/null 2>&1; then
            sccache --show-stats || echo "Warning: Failed to get sccache stats, continuing anyway"
          else
            echo "sccache not available"
          fi
      - name: Test
        working-directory: build
        run: ctest --output-on-failure
